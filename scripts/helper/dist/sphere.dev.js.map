{"version":3,"sources":["sphere.js"],"names":["numbLatitude","numbLongitude","radius","vertices","indices","sphereVertIndices","i","j"],"mappings":";;AAAA,IAAMA,YAAY,GAAG,GAArB;AACA,IAAMC,aAAa,GAAG,GAAtB;AACA,IAAMC,MAAM,GAAG,CAAf;AACA,IAAMC,QAAQ,GAAG,EAAjB;AACA,IAAMC,OAAO,GAAG,EAAhB;;AACA,SAASC,iBAAT,GAA6B;AAC3B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAApB,EAAkCM,CAAC,EAAnC,EAAuC;AACrC;AACA;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,aAApB,EAAmCM,CAAC,EAApC,EAAwC,CACtC;AACA;AACA;AACA;AACD;AACF;;AAED,OAAK,IAAID,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGN,YAApB,EAAkCM,EAAC,EAAnC,EAAuC;AACrC,SAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGN,aAApB,EAAmCM,EAAC,EAApC,EAAwC,CAAE;AAC3C;AACF","sourcesContent":["const numbLatitude = 100;\r\nconst numbLongitude = 100;\r\nconst radius = 1;\r\nconst vertices = [];\r\nconst indices = [];\r\nfunction sphereVertIndices() {\r\n  for (let i = 0; i < numbLatitude; i++) {\r\n    // calculate theta\r\n    // calculate sine and cosine theta\r\n    for (let j = 0; j < numbLongitude; j++) {\r\n      // calculate phi\r\n      // calculate sine and cosine phi\r\n      // calculate x, y and z\r\n      //   push it to vertices\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < numbLatitude; i++) {\r\n    for (let j = 0; j < numbLongitude; j++) {}\r\n  }\r\n}\r\n"],"file":"sphere.dev.js"}