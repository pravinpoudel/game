{"version":3,"sources":["sphere.js"],"names":["numbLatitude","numbLongitude","radius","vertices","indices","sphereVertIndices","index","i","theta","Math","PI","sintheta","sin","costheta","cos","j","phi","sinphi","cosinephi","x","y","z","console","log","length","p0","p1"],"mappings":";;AAAA,IAAMA,YAAY,GAAG,EAArB;AACA,IAAMC,aAAa,GAAG,EAAtB;AACA,IAAMC,MAAM,GAAG,GAAf;AACA,IAAMC,QAAQ,GAAG,EAAjB;AACA,IAAMC,OAAO,GAAG,EAAhB;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAIC,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,YAArB,EAAmCO,CAAC,EAApC,EAAwC;AACtCC,IAAAA,KAAK,GAAID,CAAC,GAAGE,IAAI,CAACC,EAAV,GAAgBV,YAAxB;AACA,QAAIW,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAASJ,KAAT,CAAf;AACA,QAAIK,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASN,KAAT,CAAf;;AAEA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAId,aAArB,EAAoCc,CAAC,EAArC,EAAyC;AACvC,UAAIC,GAAG,GAAID,CAAC,IAAI,MAAMN,IAAI,CAACC,EAAf,CAAF,GAAwBT,aAAlC;AACA,UAAIgB,MAAM,GAAGR,IAAI,CAACG,GAAL,CAASI,GAAT,CAAb;AACA,UAAIE,SAAS,GAAGT,IAAI,CAACK,GAAL,CAASE,GAAT,CAAhB;AAEA,UAAIG,CAAC,GAAGjB,MAAM,GAAGS,QAAT,GAAoBO,SAA5B;AACA,UAAIE,CAAC,GAAGlB,MAAM,GAAGW,QAAjB;AACA,UAAIQ,CAAC,GAAGnB,MAAM,GAAGS,QAAT,GAAoBM,MAA5B;AACAd,MAAAA,QAAQ,CAACG,KAAK,EAAN,CAAR,GAAoBa,CAApB;AACAhB,MAAAA,QAAQ,CAACG,KAAK,EAAN,CAAR,GAAoBc,CAApB;AACAjB,MAAAA,QAAQ,CAACG,KAAK,EAAN,CAAR,GAAoBe,CAApB;AACD;AACF;;AAEDC,EAAAA,OAAO,CAACC,GAAR,qBAAyBjB,KAAzB;AAEAA,EAAAA,KAAK,GAAG,CAAR;;AACA,OAAK,IAAIC,EAAC,GAAG,CAAR,EAAWY,EAAC,GAAGhB,QAAQ,CAACqB,MAA7B,EAAqCjB,EAAC,IAAIP,YAA1C,EAAwDO,EAAC,EAAzD,EAA6D;AAC3D,SAAK,IAAIQ,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAId,aAArB,EAAoCc,EAAC,EAArC,EAAyC;AACvC,UAAIU,EAAE,GAAGlB,EAAC,IAAIN,aAAa,GAAG,CAApB,CAAD,GAA0Bc,EAAnC,CADuC,CACD;;AACtC,UAAIW,EAAE,GAAGD,EAAE,GAAGxB,aAAL,GAAqB,CAA9B,CAFuC,CAEN;;AACjCG,MAAAA,OAAO,CAACE,KAAK,EAAN,CAAP,GAAmBmB,EAAnB;AAEArB,MAAAA,OAAO,CAACE,KAAK,EAAN,CAAP,GAAmBoB,EAAnB;AACAtB,MAAAA,OAAO,CAACE,KAAK,EAAN,CAAP,GAAmBmB,EAAE,GAAG,CAAxB;AAEArB,MAAAA,OAAO,CAACE,KAAK,EAAN,CAAP,GAAmBoB,EAAnB;AACAtB,MAAAA,OAAO,CAACE,KAAK,EAAN,CAAP,GAAmBoB,EAAE,GAAG,CAAxB;AACAtB,MAAAA,OAAO,CAACE,KAAK,EAAN,CAAP,GAAmBmB,EAAE,GAAG,CAAxB;AACD;AACF;;AACDH,EAAAA,OAAO,CAACC,GAAR,qBAAyBjB,KAAzB;AACA,SAAO,CAACH,QAAD,EAAWC,OAAX,CAAP;AACD","sourcesContent":["const numbLatitude = 50;\r\nconst numbLongitude = 50;\r\nconst radius = 0.5;\r\nconst vertices = [];\r\nconst indices = [];\r\n\r\nfunction sphereVertIndices() {\r\n  let index = 0;\r\n\r\n  for (let i = 0; i <= numbLatitude; i++) {\r\n    theta = (i * Math.PI) / numbLatitude;\r\n    let sintheta = Math.sin(theta);\r\n    let costheta = Math.cos(theta);\r\n\r\n    for (let j = 0; j <= numbLongitude; j++) {\r\n      let phi = (j * (2.0 * Math.PI)) / numbLongitude;\r\n      let sinphi = Math.sin(phi);\r\n      let cosinephi = Math.cos(phi);\r\n\r\n      let x = radius * sintheta * cosinephi;\r\n      let y = radius * costheta;\r\n      let z = radius * sintheta * sinphi;\r\n      vertices[index++] = x;\r\n      vertices[index++] = y;\r\n      vertices[index++] = z;\r\n    }\r\n  }\r\n\r\n  console.log(`index1 is ${index}`);\r\n\r\n  index = 0;\r\n  for (let i = 0, x = vertices.length; i <= numbLatitude; i++) {\r\n    for (let j = 0; j <= numbLongitude; j++) {\r\n      let p0 = i * (numbLongitude + 1) + j; //remember not j+1;\r\n      let p1 = p0 + numbLongitude + 1; //dont forget to add 1;\r\n      indices[index++] = p0;\r\n\r\n      indices[index++] = p1;\r\n      indices[index++] = p0 + 1;\r\n\r\n      indices[index++] = p1;\r\n      indices[index++] = p1 + 1;\r\n      indices[index++] = p0 + 1;\r\n    }\r\n  }\r\n  console.log(`index2 is ${index}`);\r\n  return [vertices, indices];\r\n}\r\n"],"file":"sphere.dev.js"}