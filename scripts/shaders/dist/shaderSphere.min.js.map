{"version":3,"sources":["shaderSphere.js"],"names":["vs","fs","vsTriangle","fsTriangle","vsSkybox","fsSkybox"],"mappings":"aAAA,IAAMA,GAAE,0pBA0BFC,GAAE,udAuBFC,WAAU,mOAYVC,WAAU,4OAcVC,SAAQ,oPAaRC,SAAQ","file":"shaderSphere.min.js","sourcesContent":["const vs = `#version 300 es\r\n\r\n#define M_PI 3.1415926535897932384626433832795\r\n\r\nin vec3 a_position;\r\nin float a_textureCordinate;\r\n\r\nuniform mat4 u_ModelMatrix;\r\nuniform mat4 u_wvProjectionMatrix;\r\n\r\nout vec3 vertexCordinate;\r\nout vec2 uvCordinate;\r\n\r\nvoid main(){\r\n\r\n    vec3 vertDirection = normalize(vec3(a_position) - vec3(0.0, 0.0, 0.0));\r\n    float u = atan(vertDirection.x, vertDirection.z)/(2.0*M_PI) + 0.5;\r\n    float v = 0.5-vertDirection.y ;\r\n    uvCordinate = vec2(u,v);\r\n\r\n    // gl_Position =  u_wvProjectionMatrix* vec4((2.0*a_position)- vec3(1.0, 1.0, 1.0), 1.0);  \r\n    gl_Position =   vec4(a_position, 1.0);\r\n    vertexCordinate = 0.5 - a_position;   \r\n}\r\n`;\r\n\r\nconst fs = `#version 300 es\r\n\r\n\r\nprecision highp float;\r\n\r\nin vec3 vertexCordinate;\r\nuniform sampler2D u_sphereText;\r\n\r\nout vec4 outColor;\r\nin vec2 uvCordinate;\r\n\r\nvoid main(){\r\n \r\n    // vec3 vertDirection = normalize(vertexCordinate - vec3(0.0, 0.0, 0.0));\r\n    // float u = atan(vertDirection.x, vertDirection.z)/(2.0*M_PI) + 0.5;\r\n    // float v = 0.5-vertDirection.y ;\r\n\r\n    outColor = texture(u_sphereText, uvCordinate);\r\n    // outColor = vec4(0.0, 0.8,  0.0, 1.0);\r\n}\r\n\r\n`;\r\n\r\nconst vsTriangle = `#version 300 es\r\n    in vec3 a_position;\r\n    out vec3 varying_color;\r\n\r\n    uniform mat4 u_vpMatrix;\r\n\r\n    void main(){\r\n        gl_Position = u_vpMatrix*vec4(a_position, 1.0);\r\n        varying_color = a_position;\r\n    }\r\n`;\r\n\r\nconst fsTriangle = `#version 300 es\r\n\r\n    precision mediump float;\r\n    in vec3 varying_color;\r\n    uniform mat4 u_model;\r\n    unfirom mat4 u_VPmatrix;\r\n\r\n    out vec4 outColor;\r\n\r\n    void main(){\r\n        outColor = vec4(varying_color, 0.7);\r\n    }\r\n`;\r\n\r\nconst vsSkybox = `#version 300 es\r\nin vec3 a_position;\r\nout vec3 vertexPosition;\r\nuniform mat4 u_VPmatrix;\r\nuniform mat4 u_modelMatrix;\r\n\r\n// pass the vertex vector to fragment shader\r\n\r\nvoid main(){\r\n    gl_Position = u_VPmatrix*(vec4(a_position, 1.0));\r\n}\r\n`;\r\n\r\nconst fsSkybox = `#version 300 es\r\n\r\nprecision highp float;\r\n\r\nin vec3 vertexPosition;\r\nout vec4 outColor;\r\n\r\n// create a cubemap sampler\r\n\r\n\r\nvoid main(){\r\n\r\n    outColor = vec4(0.0, 1.0, 0.0, 1.0);\r\n    // outColor = texture(sampleCube, vertexPosition);\r\n}\r\n`;\r\n"]}