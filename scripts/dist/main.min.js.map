{"version":3,"sources":["main.js"],"names":["gl","document","querySelector","getContext","getExtension","program","webglUtils","createProgramFromSources","vs","fs","programTriangle","vsTriangle","fsTriangle","vao","vsSkybox","createVertexArray","bindVertexArray","ext","getAttribLocation","programSkybox","console","modelMatrixLocation","getUniformLocation","position","triangleAttributeLocs","sphere","sphereVertIndices","bindBuffer","ARRAY_BUFFER","bufferData","positionBufferr","_toConsumableArray","ballTexture","level","createBuffer","posTriangleBuffer","border","srcFormat","RGBA","srcType","ballImage","Image","crossOrigin","TEXTURE_2D","texParameteri","pixel","Uint8Array","texImage2D","cameraDegree","onload","internallFormat","DEPTH_TEST","enable","useProgram","uniform1i","sphereTextLocation","log","enableVertexAttribArray","translationMatrix","translate","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","m4","multiply","modelMatrix","requestAnimationFrame","cameraPosition","cameraMatrix","canvas","initialCameraSetup","clearColor","clientWidth","clear","fieldofView","DEPTH_BUFFER_BIT","projectionMatrix","vProjectionMatrix","drawElements","uniformMatrix4fv","drawArrays","TRIANGLE_STRIP","FLOAT","degToRadian","modelDegree","cameraRadian","yRotation","_m","apply","concat","modelTranslation","cameraYposition","up","viewMatrix","inverse","aspect","clientHeight","perspective","indicesBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","STATIC_DRAW","viewProjectionLocation","TRIANGLES","length","UNSIGNED_SHORT","vertexAttribPointer","window","drawScene"],"mappings":"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","file":"main.min.js","sourcesContent":["`use strict`;\r\n\r\n(function () {\r\n  const canvas = document.querySelector(\"#main-canvas\");\r\n  let gl = canvas.getContext(\"webgl2\");\r\n  if (!gl) {\r\n    console.log(\"webgl2 not found\");\r\n    return;\r\n  }\r\n  var ext = gl.getExtension(\"OES_element_index_uint\");\r\n\r\n  let program = webglUtils.createProgramFromSources(gl, [vs, fs]);\r\n  let programTriangle = webglUtils.createProgramFromSources(gl, [\r\n    vsTriangle,\r\n    fsTriangle,\r\n  ]);\r\n  let programSkybox = webglUtils.createProgramFromSources(gl, [vsSkybox, fs]);\r\n\r\n  let vao = gl.createVertexArray();\r\n  gl.bindVertexArray(vao);\r\n\r\n  let positionLocation = gl.getAttribLocation(program, \"a_position\");\r\n  let sphereTextLocation = gl.getUniformLocation(program, \"u_sphereText\");\r\n  let modelMatrixLocation = gl.getUniformLocation(program, \"u_ModelMatrix\");\r\n  let viewProjectionLocation = gl.getUniformLocation(\r\n    program,\r\n    \"u_wvProjectionMatrix\"\r\n  );\r\n\r\n  console.log(gl.getUniformLocation(programTriangle, \"u_vpMatrix\"));\r\n\r\n  let triangleAttributeLocs = {\r\n    position: gl.getAttribLocation(programTriangle, \"a_position\"),\r\n    modelMatrixLocation: gl.getUniformLocation(programTriangle, \"u_vpMatrix\"),\r\n  };\r\n\r\n  const sphere = sphereVertIndices();\r\n\r\n  let positionBufferr = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBufferr);\r\n  gl.bufferData(\r\n    gl.ARRAY_BUFFER,\r\n    new Float32Array([...sphere[0]]),\r\n    gl.STATIC_DRAW\r\n  );\r\n\r\n  let posTriangleBuffer = gl.createBuffer();\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, posTriangleBuffer);\r\n  gl.bufferData(\r\n    gl.ARRAY_BUFFER,\r\n    new Float32Array(positionTriangle),\r\n    gl.STATIC_DRAW\r\n  );\r\n\r\n  let ballTexture = gl.createTexture();\r\n  gl.activeTexture(gl.TEXTURE1);\r\n  gl.bindTexture(gl.TEXTURE_2D, ballTexture);\r\n\r\n  const level = 0;\r\n  const internallFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]);\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    level,\r\n    internallFormat,\r\n    width,\r\n    height,\r\n    border,\r\n    srcFormat,\r\n    srcType,\r\n    pixel\r\n  );\r\n\r\n  let ballImage = new Image();\r\n  ballImage.crossOrigin = \"\";\r\n  ballImage.src = \"http://localhost/game/images/texture/ball.jpg\";\r\n\r\n  ballImage.onload = function () {\r\n    console.log(\"i am loaded\");\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      level,\r\n      internallFormat,\r\n      srcFormat,\r\n      srcType,\r\n      ballImage\r\n    );\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n  };\r\n\r\n  let cameraDegree = 0;\r\n\r\n  function drawScene() {\r\n    webglUtils.resizeCanvasToDisplaySize(gl.canvas);\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n    gl.clearColor(0.0, 0.0, 1.0, 0.5);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    gl.enable(gl.CULL_FACE);\r\n    // gl.cullFace(gl.CULL_FACE);\r\n\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.enable(gl.BLEND);\r\n\r\n    gl.useProgram(program);\r\n    gl.bindVertexArray(vao);\r\n    gl.uniform1i(sphereTextLocation, 1);\r\n\r\n    // cameraDegree += 0.4;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBufferr);\r\n    gl.enableVertexAttribArray(positionLocation);\r\n    gl.vertexAttribPointer(positionLocation, 3, gl.FLOAT, false, 0, 0);\r\n\r\n    let modelRadian = degToRadian(modelDegree);\r\n    let cameraRadian = degToRadian(cameraDegree);\r\n\r\n    // -------------------------------------------------------------------\r\n    let modelMatrix = m4.yRotation(0);\r\n    let translationMatrix = m4.translate(modelMatrix, ...modelTranslation);\r\n    console.log(translationMatrix);\r\n    m4.multiply(modelMatrix, translationMatrix, modelMatrix);\r\n    gl.uniformMatrix4fv(modelMatrixLocation, false, modelMatrix);\r\n    // --------------------------------------------------------------------\r\n\r\n    let cameraMatrix = m4.yRotation(cameraRadian);\r\n\r\n    cameraMatrix = m4.translate(cameraMatrix, 0.0, 0.0, cameraYposition);\r\n\r\n    cameraPosition = [cameraMatrix[12], cameraMatrix[13], cameraMatrix[14]];\r\n    cameraPosition = [0.0, 1.0, 0.0];\r\n    cameraMatrix = initialCameraSetup(cameraPosition, up);\r\n\r\n    viewMatrix = m4.inverse(cameraMatrix);\r\n\r\n    let aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    let fieldofView = degToRadian(90);\r\n    let projectionMatrix = m4.perspective(fieldofView, aspect, 0.01, 1000);\r\n\r\n    let indicesBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indicesBuffer);\r\n    gl.bufferData(\r\n      gl.ELEMENT_ARRAY_BUFFER,\r\n      new Uint16Array([...sphere[1]]),\r\n      gl.STATIC_DRAW\r\n    );\r\n\r\n    let vProjectionMatrix = m4.multiply(projectionMatrix, viewMatrix);\r\n    gl.uniformMatrix4fv(viewProjectionLocation, false, vProjectionMatrix);\r\n    gl.drawElements(gl.TRIANGLES, sphere[1].length, gl.UNSIGNED_SHORT, 0);\r\n\r\n    // -------------------triangle draw ---------------------\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, posTriangleBuffer);\r\n    gl.enableVertexAttribArray(triangleAttributeLocs.position);\r\n\r\n    gl.vertexAttribPointer(\r\n      triangleAttributeLocs.position,\r\n      3,\r\n      gl.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n\r\n    gl.useProgram(programTriangle);\r\n\r\n    gl.uniformMatrix4fv(\r\n      triangleAttributeLocs.modelMatrixLocation,\r\n      false,\r\n      vProjectionMatrix\r\n    );\r\n\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 3);\r\n    window.requestAnimationFrame(drawScene);\r\n  }\r\n\r\n  requestAnimationFrame(drawScene);\r\n})();\r\n"]}