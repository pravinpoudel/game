{"version":3,"sources":["skybox.js"],"names":["gl","document","getElementById","getContext","createProgramFromSources","vsSkybox","fsSkybox","modelLocation","bindVertexArray","VPuniformLocation","bindBuffer","ARRAY_BUFFER","programSkybox","bufferData","Float32Array","cubePosition","enableVertexAttribArray","apositionLocation","indexedImage","Image","crossOrigin","positionBuffer","bindTexture","STATIC_DRAW","vertexAttribPointer","FLOAT","cubeMapTexture","canvas","TEXTURE_CUBE_MAP","enable","CULL_FACE","cubeImageSources","length","i","BLEND","useProgram","modelAngle","modelMatrix","cameraAngle","aspectRatio","webglUtils","projectionMatrix","fov","multiply","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","drawArrays","window","requestAnimationFrame","m4","yRotation","draw","uniformMatrix4fv","camera","translate","viewMatrix","inverse","Math","PI","clientWidth","clientHeight","perspective","TRIANGLE_STRIP"],"mappings":"cAAA,WACE,IADDA,EACcC,SAASC,eAAe,eAD1BC,WAAA,UAEPH,EAAYG,WAAWC,yBAA3BJ,EAAA,CAEAK,SAKAC,WAIIC,EAAAA,EAAAA,oBACJP,EAAAQ,gBAAIC,GAGJT,IAAGU,EAAcC,EAAAA,kBAAjBC,EAAA,cACGC,EACEF,EAAAA,mBACCG,EAAaC,iBAIhBC,EAAAA,EAAwBC,mBAA3BL,EAAA,cAGIM,EAAelB,EAAImB,eACvBD,EAAAA,WAAaE,EAAAA,aAAbC,GAEArB,EAAAa,WACEb,EAACsB,aAXD,IAAIR,aAAaC,cAanBf,EAAKuB,aAUJvB,EAAAgB,wBAAAC,GAlBDjB,EAAGwB,oBAAoBP,EAAmB,EAAGjB,EAAGyB,OAAO,EAAO,EAAG,GAEjE,IAAIP,EAAe,IAAIC,MAoBvBD,EAAAE,YAAgB,GAEdpB,IAAE0B,EAAgB1B,EAAG2B,gBAErB3B,EAAAA,YAAAA,EAAc4B,iBAAdF,GAGA1B,IAAG6B,IAAAA,EAAO7B,EAAG8B,EAAbC,iBAAAC,OAAAC,EAAAD,EAAAC,IACAjC,EAAakC,IAAblC,mBAAAA,OAAA+B,iBAAAE,IACAjC,EAAG6B,WAED7B,EAACmC,4BAAHF,EACE,EAEFjC,EAAIoC,KACJpC,EAAIqC,KACJA,EAAAA,cACEnB,GAKF,IAAAoB,EAAc,EAGd,SAAIC,IACJC,WAAIC,0BAAmBzC,EAAe0C,QAEtCD,EAAAA,SAAAA,EAAAA,EAAgBzC,EAAK2B,OAACgB,MAASF,EAAAA,OAAAA,QAI/BzC,EAAA4C,WAAA,EAAA,EAAA,EAAA,GACA5C,EAAA6C,MAAA7C,EAAA8C,iBAAA9C,EAAA+C,kBAEA/C,EAAA6B,OAAA7B,EAAA8B,WACA9B,EAAA6B,OAAA7B,EAAAkC,OA3BAlC,EAAG6B,OAAO7B,EAAGgD,YA+BbhD,EAAGiD,WAAWjD,GACdkD,EAAAA,gBAAOC,GA3BP,IA8BEd,EAAAe,GAAAC,UA9Be,GA+BnBH,EAAOC,GAAAA,UAAsBG,EAA7B,GAAA,EAAA,GA5FFtD,EAAAuD,iBAAAhD,GAAA,EAAA8B,GAkEIC,GAAe,IACf,IAAIkB,EAASJ,GAAGC,UAAUf,GAC1BkB,EAASJ,GAAGK,UAAUD,EAAQ,EAAK,EAAK,KACxC,IAAIE,EAAaN,GAAGO,QAAQH,GAExBd,EAAMkB,KAAKC,GAAK,EAChBtB,EAAcvC,EAAG2B,OAAOmC,YAAc9D,EAAG2B,OAAOoC,aAChDtB,EAAmBW,GAAGY,YAAYtB,EAAKH,EAAa,GAAK,KAE7DE,EAAmBW,GAAGT,SAASF,EAAkBiB,GAUjD1D,EAAGuD,iBAAiB9C,GAAmB,EAAOgC,GAE9CzC,EAAGiD,WAAWjD,EAAGiE,eAAgB,EAAGlD,aAAaiB,OAAS,GAC1DkB,OAAOC,sBAAsBG,GAG/BA,IACAJ,OAAOC,sBAAsBG,GA5F/B","file":"skybox.min.js","sourcesContent":["(function () {\r\n  let canvas = document.getElementById(\"main-canvas\");\r\n  let gl = canvas.getContext(\"webgl2\");\r\n\r\n  let programSkybox = webglUtils.createProgramFromSources(gl, [\r\n    vsSkybox,\r\n    fsSkybox,\r\n  ]);\r\n\r\n  let vao = gl.createVertexArray();\r\n  gl.bindVertexArray(vao);\r\n\r\n  let apositionLocation = gl.getAttribLocation(programSkybox, \"a_position\");\r\n  let modelLocation = gl.getUniformLocation(programSkybox, \"u_modelMatrix\");\r\n  let VPuniformLocation = gl.getUniformLocation(programSkybox, \"u_VPmatrix\");\r\n\r\n  let positionBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n  gl.bufferData(\r\n    gl.ARRAY_BUFFER,\r\n    new Float32Array(cubePosition),\r\n    gl.STATIC_DRAW\r\n  );\r\n\r\n  gl.enableVertexAttribArray(apositionLocation);\r\n  gl.vertexAttribPointer(apositionLocation, 3, gl.FLOAT, false, 0, 0);\r\n\r\n  let indexedImage = new Image();\r\n  indexedImage.crossOrigin = \"\";\r\n\r\n  let cubeMapTexture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_CUBE_MAP, cubeMapTexture);\r\n\r\n  for (let i = 0, length = cubeImageSources.length; i < length; i++) {\r\n    indexedImage.src = `/images/texture/${cubeImageSources[i]}`;\r\n    gl.texImage2D(\r\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n      0,\r\n      gl.RGBA,\r\n      gl.RGBA,\r\n      gl.UNSIGNED_BYTE,\r\n      indexedImage\r\n    );\r\n  }\r\n\r\n  let cameraAngle = 0;\r\n\r\n  function draw() {\r\n    webglUtils.resizeCanvasToDisplaySize(gl.canvas);\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n    gl.clearColor(1.0, 1.0, 1.0, 1.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.BLEND);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    gl.useProgram(programSkybox);\r\n    gl.bindVertexArray(vao);\r\n\r\n    let modelAngle = 0;\r\n    let modelMatrix = m4.yRotation(modelAngle);\r\n    modelMatrix = m4.translate(modelMatrix, 0.5, 0.0, 0.0);\r\n    gl.uniformMatrix4fv(modelLocation, false, modelMatrix);\r\n\r\n    cameraAngle += 0.01;\r\n    let camera = m4.yRotation(cameraAngle);\r\n    camera = m4.translate(camera, 0.0, 0.0, 4.5);\r\n    let viewMatrix = m4.inverse(camera);\r\n\r\n    let fov = Math.PI / 3.0;\r\n    let aspectRatio = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    let projectionMatrix = m4.perspective(fov, aspectRatio, 0.1, 1000);\r\n\r\n    projectionMatrix = m4.multiply(projectionMatrix, viewMatrix);\r\n\r\n    // let indicesBuffer = gl.createBuffer();\r\n    // gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indicesBuffer);\r\n    // gl.bufferData(\r\n    //   gl.ELEMENT_ARRAY_BUFFER,\r\n    //   new Uint8Array(indexArray),\r\n    //   gl.STATIC_DRAW\r\n    // );\r\n\r\n    gl.uniformMatrix4fv(VPuniformLocation, false, projectionMatrix);\r\n\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, cubePosition.length / 3);\r\n    window.requestAnimationFrame(draw);\r\n  }\r\n\r\n  draw();\r\n  window.requestAnimationFrame(draw);\r\n})();\r\n"]}